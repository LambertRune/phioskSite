// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhioskSite.Domains.DataDB;

#nullable disable

namespace PhioskSite.Domains.Migrations
{
    [DbContext(typeof(PhioskDbContext))]
    [Migration("20250105105247_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhioskSite.Domains.EntitiesDB.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AccountNo")
                        .HasColumnType("int");

                    b.Property<DateOnly>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AccountNo");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("PhioskSite.Domains.EntitiesDB.Phone", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("AddedOn")
                        .HasColumnType("date");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nchar(500)")
                        .IsFixedLength();

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<string>("PhoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("StorageCapacity")
                        .HasColumnType("int")
                        .HasColumnName("storageCapacity");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceNumber");

                    b.ToTable("Phone", (string)null);
                });

            modelBuilder.Entity("PhioskSite.Domains.EntitiesDB.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Address")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("UserAccount", (string)null);
                });

            modelBuilder.Entity("PhioskSite.Domains.EntitiesDB.Invoice", b =>
                {
                    b.HasOne("PhioskSite.Domains.EntitiesDB.UserAccount", "UserAccount")
                        .WithMany("Invoices")
                        .HasForeignKey("AccountNo")
                        .HasConstraintName("FK_Invoice_UserAccount");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("PhioskSite.Domains.EntitiesDB.Phone", b =>
                {
                    b.HasOne("PhioskSite.Domains.EntitiesDB.Invoice", "Invoice")
                        .WithMany("Phones")
                        .HasForeignKey("InvoiceNumber")
                        .HasConstraintName("FK_Phone_Invoice");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("PhioskSite.Domains.EntitiesDB.Invoice", b =>
                {
                    b.Navigation("Phones");
                });

            modelBuilder.Entity("PhioskSite.Domains.EntitiesDB.UserAccount", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
